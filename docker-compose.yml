version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: greenchain-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: greenchain
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - greenchain-network

  # GreenChain Backend API
  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    container_name: greenchain-api
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/greenchain?authSource=admin
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_EXPIRES_IN: 24h
      JWT_REFRESH_EXPIRES_IN: 7d
      EMAIL_USER: your-email@gmail.com
      EMAIL_PASS: your-app-specific-password
      EMAIL_FROM: GreenChain <noreply@greenchain.com>
      EMAIL_SERVICE: gmail
      FRONTEND_URL: http://localhost:3000
      COOKIE_SECRET: your-cookie-secret-key-change-in-production
      RATE_LIMIT_WINDOW_MS: 900000
      RATE_LIMIT_MAX_REQUESTS: 100
      OTP_EXPIRY_MINUTES: 10
      OTP_LENGTH: 4
      PASSWORD_RESET_EXPIRY_HOURS: 1
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
    networks:
      - greenchain-network
    volumes:
      - ./logs:/app/logs

  # GreenChain Frontend (Development)
  client:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    container_name: greenchain-client
    restart: unless-stopped
    environment:
      VITE_API_URL: http://localhost:5000
    ports:
      - "3000:3000"
    volumes:
      - ./client:/app
      - /app/node_modules
    depends_on:
      - api
    networks:
      - greenchain-network

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: greenchain-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - greenchain-network

  # Nginx Reverse Proxy (Production)
  nginx:
    image: nginx:alpine
    container_name: greenchain-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
      - client
    networks:
      - greenchain-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  greenchain-network:
    driver: bridge

